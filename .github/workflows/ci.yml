name: 'CI'

on:
  pull_request:
  push:
    branches: [ 'develop', 'prod' ]
env:
  python_version: '3.9.12'

jobs:

  test:
    runs-on: 'ubuntu-22.04'
    steps:

      - name: 'checkout'
        uses: 'actions/checkout@v3'

      - name: 'setup_python'
        uses: 'actions/setup-python@v4.3.0'
        with:
          python-version: '${{ env.python_version }}'
          cache: 'pip'
          cache-dependency-path: 'requirements.dev.txt'

      - name: 'test'
        run: |
          source environment
          _link dev
          _refresh

          make virtualenv
          source .venv/bin/activate
          make requirements
          # Hack: The use of chrgp compensates for a quirk of Docker. The PyCharm image
          # used by make format sets up a user called `developer` and assigns it UID
          # 1000. Actions is running as UID 1001. An alternative would be to pass --user
          # to `docker run` and bind-mount an /etc/passwd that maps that to `developer`.
          # We also need write permissions for the group
          chmod -R g+w . && sudo chgrp -R 1000 . && make format && sudo chgrp -R $(id -g) .
          make -C lambdas openapi
          make check_clean
          make pep8
          AZUL_DEBUG=0 GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} make test
          make check_clean
          coverage xml

      - name: 'upload_artifacts'
        uses: 'actions/upload-artifact@v3'
        with:
          name: 'coverage-file'
          path: 'coverage.xml'

  codecov:
    needs: 'test'
    runs-on: 'ubuntu-22.04'
    steps:

      - name: 'checkout'
        uses: 'actions/checkout@v3'

      - name: 'setup_python'
        uses: 'actions/setup-python@v4.3.0'
        with:
          python-version: '${{ env.python_version }}'
          cache: 'pip'
          cache-dependency-path: 'requirements.dev.txt'

      - name: 'download_artifacts'
        uses: 'actions/download-artifact@v3'
        with:
          name: 'coverage-file'

      - name: 'upload_coverage'
        uses: 'codecov/codecov-action@v3'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: 'coverage.xml'
          fail_ci_if_error: true

  coveralls:
    needs: 'test'
    runs-on: 'ubuntu-22.04'
    steps:
      - name: 'checkout'
        uses: 'actions/checkout@v3'

      - name: 'setup_python'
        uses: 'actions/setup-python@v4.3.0'
        with:
          python-version: '${{ env.python_version }}'
          cache: 'pip'
          cache-dependency-path: 'requirements.dev.txt'

      - name: 'download_artifacts'
        uses: 'actions/download-artifact@v3'
        with:
          name: 'coverage-file'

      - name: 'upload_coverage'
        uses: 'coverallsapp/github-action@v2'
        with:
          github-token: ${{ secrets.COVERALLS_REPO_TOKEN }}

  codeql:
    runs-on: 'ubuntu-22.04'
    permissions:
      actions: 'read'
      contents: 'read'
      security-events: 'write'
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python', 'javascript' ]
    steps:

      - name: 'checkout'
        uses: 'actions/checkout@v3'

      - name: 'setup_python'
        uses: 'actions/setup-python@v4.3.0'
        with:
          python-version: '${{ env.python_version }}'
          cache: 'pip'
          cache-dependency-path: 'requirements.dev.txt'

      - name: 'codeql_init'
        uses: 'github/codeql-action/init@v2'
        with:
          languages: '${{ matrix.language }}'
          setup-python-dependencies: false
          config-file: './.github/codeql/codeql-config.yml'
          queries: 'security-and-quality'

      - name: 'codeql_analyze'
        uses: 'github/codeql-action/analyze@v2'
        with:
          category: '/language:${{matrix.language}}'
